{"version":3,"file":"component---src-pages-index-tsx-4ea8f9895f206ff75748.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/@react-icons/all-files/fa/FaFacebookF.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/fa/FaInstagram.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/fa/FaUserTie.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/fa/FaWhatsapp.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/io5/IoMailOutline.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/io/IoIosSearch.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/lib/esm/iconsManifest.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/lib/esm/iconContext.js","webpack://my-gatsby-site/./node_modules/@react-icons/all-files/lib/esm/iconBase.js","webpack://my-gatsby-site/./node_modules/camelcase/index.js","webpack://my-gatsby-site/../src/image-utils.ts","webpack://my-gatsby-site/../src/components/hooks.ts","webpack://my-gatsby-site/../src/components/layout-wrapper.tsx","webpack://my-gatsby-site/../src/components/picture.tsx","webpack://my-gatsby-site/../src/components/placeholder.tsx","webpack://my-gatsby-site/../src/components/main-image.tsx","webpack://my-gatsby-site/../src/components/gatsby-image.server.tsx","webpack://my-gatsby-site/../src/components/gatsby-image.browser.tsx","webpack://my-gatsby-site/../src/components/static-image.server.tsx","webpack://my-gatsby-site/../src/components/static-image.tsx","webpack://my-gatsby-site/./src/components/shared/navigationBar/NavigationContext.ts","webpack://my-gatsby-site/./src/components/shared/Logo.tsx","webpack://my-gatsby-site/./src/components/shared/SearchBar.tsx","webpack://my-gatsby-site/./src/components/shared/navigationBar/NavBar.tsx","webpack://my-gatsby-site/./src/components/Layout.tsx","webpack://my-gatsby-site/./src/components/shared/ContactInformation.tsx","webpack://my-gatsby-site/./src/components/shared/SocialNetworkList.tsx","webpack://my-gatsby-site/./src/components/landingPage/LandingPage.tsx","webpack://my-gatsby-site/./src/components/landingPage/ServicesPage.tsx","webpack://my-gatsby-site/./src/components/landingPage/BusinessProfilePage.tsx","webpack://my-gatsby-site/./src/components/landingPage/ClientsPage.tsx","webpack://my-gatsby-site/./node_modules/react-intersection-observer/index.mjs","webpack://my-gatsby-site/./src/components/shared/scrollSlider/ScrollNavBar.tsx","webpack://my-gatsby-site/./src/components/shared/scrollSlider/ScrollSlider.tsx","webpack://my-gatsby-site/./src/components/shared/scrollSlider/Slide.tsx","webpack://my-gatsby-site/./src/pages/index.tsx"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaFacebookF = function FaFacebookF (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 320 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaInstagram = function FaInstagram (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 448 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaUserTie = function FaUserTie (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 448 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm95.8 32.6L272 480l-32-136 32-56h-96l32 56-32 136-47.8-191.4C56.9 292 0 350.3 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaWhatsapp = function FaWhatsapp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 448 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.IoMailOutline = function IoMailOutline (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"width\":\"416\",\"height\":\"320\",\"x\":\"48\",\"y\":\"96\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeWidth\":\"32\",\"rx\":\"40\",\"ry\":\"40\"}},{\"tag\":\"path\",\"attr\":{\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeWidth\":\"32\",\"d\":\"M112 160l144 112 144-112\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.IoIosSearch = function IoIosSearch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M443.5 420.2L336.7 312.4c20.9-26.2 33.5-59.4 33.5-95.5 0-84.5-68.5-153-153.1-153S64 132.5 64 217s68.5 153 153.1 153c36.6 0 70.1-12.8 96.5-34.2l106.1 107.1c3.2 3.4 7.6 5.1 11.9 5.1 4.1 0 8.2-1.5 11.3-4.5 6.6-6.3 6.8-16.7.6-23.3zm-226.4-83.1c-32.1 0-62.3-12.5-85-35.2-22.7-22.7-35.2-52.9-35.2-84.9 0-32.1 12.5-62.3 35.2-84.9 22.7-22.7 52.9-35.2 85-35.2s62.3 12.5 85 35.2c22.7 22.7 35.2 52.9 35.2 84.9 0 32.1-12.5 62.3-35.2 84.9-22.7 22.7-52.9 35.2-85 35.2z\"}}]})(props);\n};\n","export var IconsManifest = [\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/refactoringui/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  }\n]","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { createContext } from \"react\";\r\n\r\nexport interface NavBarContextType {\r\n  navOptions: {\r\n    [key : string] : {\r\n      label: string;\r\n      path: string;\r\n      handler: () => void\r\n      type?: string\r\n    }\r\n  }\r\n  setNavOptions: (k: any) => void\r\n}\r\n\r\nexport const initialNavBarContext = {\r\n  home: {\r\n    label: \"inicio\",\r\n    path: '/',\r\n    type: 'scroll',\r\n    handler: () => {}\r\n  },\r\n  services: {\r\n    label: \"Servicios\",\r\n    path: '/services',\r\n    handler: () => {}\r\n  },\r\n  news: {\r\n    label: \"Noticias\",\r\n    path: '/news',\r\n    handler: () => {}\r\n  },\r\n}\r\n\r\nexport const NavBarContext = createContext<NavBarContextType>({\r\n  navOptions: initialNavBarContext,\r\n  setNavOptions: () => {}\r\n});","import React, { useContext } from \"react\";\r\nimport { NavBarContext } from \"./navigationBar/NavigationContext\";\r\nimport { navigate } from \"gatsby\";\r\n\r\n\r\n\r\n /**\r\n  * TODOs\r\n  * Set text size correctly to fit the current space\r\n  */\r\n export const CompanyLogo = () => {\r\n  const {navOptions} = useContext(NavBarContext)\r\n\r\n  const goToHome = () => {\r\n    navigate(navOptions[0].path)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center text-primary\" onClick={goToHome}>\r\n        <div className=\"text-6xl font-medium\">GIPE</div>\r\n        <div className=\"text-sm\">Ingenieria con Tecnologia</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IoIosSearch } from \"@react-icons/all-files/io/IoIosSearch\";\r\n\r\n/**\r\n * TODOs\r\n * improve styling of the input field\r\n * Improve styling of search button\r\n * Add function as prop to define what to search (to search by key word in page content)\r\n */\r\n\r\nconst placeholder = \"buscar tu interes\"\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-1\">\r\n        <input className=\"text-primary bg-transparent border-solid border-4 border-transparent border-b-background\" placeholder={placeholder} />\r\n        <button disabled={true} className=\"rounded-full border-solid border-black hover:bg-secondary p-2\">\r\n          <IoIosSearch />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { CompanyLogo } from \"../Logo\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport { NavBarContext } from \"./NavigationContext\";\r\nimport { Link, navigate } from \"gatsby\";\r\n\r\n// TODO: allow navigation link to receive label and handler\r\nexport const NavigationLinks = ({}) => {\r\n  const { navOptions, setNavOptions } = useContext(NavBarContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-wrap flex-row items-center justify-start space-x-2\">\r\n        {Object.keys(navOptions).map((key) => (\r\n          <Link\r\n            to={navOptions[key].path}\r\n            activeStyle={{ \"font-weight\": \"bold\" }}\r\n          >\r\n            {navOptions[key].label}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    // <div className=\"sticky top-0 z-50\">\r\n    <div className=\"bg-surface flex flex-wrap flex-row justify-between items-center px-5\">\r\n      <CompanyLogo />\r\n\r\n      <div>\r\n        <NavigationLinks />\r\n      </div>\r\n\r\n      <SearchBar />\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { NavBar } from \"./shared/navigationBar/NavBar\";\r\nimport { NavBarContext, initialNavBarContext } from \"./shared/navigationBar/NavigationContext\";\r\n\r\nconst Layout = ({\r\n  children,\r\n}: {\r\n  children: ReactNode;\r\n}) => {\r\n\r\n  const [navOptions, setNavOptions] = useState(initialNavBarContext)\r\n\r\n  return (\r\n    <NavBarContext.Provider value={{navOptions, setNavOptions}}>\r\n    <div className=\"bg-background\">\r\n      <NavBar />\r\n      {children}\r\n    </div>\r\n    </NavBarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\"\r\nimport {IoMailOutline} from '@react-icons/all-files/io5/IoMailOutline'\r\nimport {FaUserTie} from '@react-icons/all-files/fa/FaUserTie'\r\n\r\n/**\r\n * TODOs\r\n * increase icon size\r\n * Improve spacing\r\n *  Get together the icon and the tet\r\n *  Separate more each contact information\r\n */\r\n\r\nexport const ContactInformation = () => {\r\n\r\n  const contactInformation = [{\r\n    icon: <IoMailOutline />,\r\n    value: 'comercial@gipesas.com'\r\n  },\r\n  {\r\n    icon: <FaUserTie />,\r\n    value: '(57) 3042081668 - 602 4037917'\r\n  }]\r\n\r\n  return (<>\r\n    <div className=\"flex flex-wrap gap-5 space-x-1 text-xl\">\r\n      {contactInformation.map(contact => (<>\r\n        <div className=\"flex flex-wrap gap-0 space-x-2 items-center pb-5\">\r\n          <div className=\"text-2xl\">\r\n            {contact.icon}\r\n          </div>\r\n          <p>{contact.value}</p>\r\n        </div>\r\n      </>))}\r\n    </div>\r\n  </>)\r\n}\r\n","import React from \"react\";\r\nimport { FaWhatsapp } from \"@react-icons/all-files/fa/FaWhatsapp\";\r\nimport { FaInstagram } from \"@react-icons/all-files/fa/FaInstagram\";\r\nimport { FaFacebookF } from \"@react-icons/all-files/fa/FaFacebookF\";\r\n\r\nexport const SocialNetworkList = () => {\r\n  const socialNetworks = [\r\n    {\r\n      icon: <FaWhatsapp />,\r\n      link: \"TODO\",\r\n    },\r\n    {\r\n      icon: <FaInstagram />,\r\n      link: \"TODO\",\r\n    },\r\n    {\r\n      icon: <FaFacebookF />,\r\n      link: \"TODO\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      {socialNetworks.map((net) => (\r\n        <a className=\"text-xl rounded-full border-solid border-2 border-background p-2\" href={net.link}>\r\n          {net.icon}\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { StaticImage } from \"gatsby-plugin-image\";\r\nimport React, { forwardRef, useContext, useRef } from \"react\";\r\nimport { ContactInformation } from \"../shared/ContactInformation\";\r\nimport { SocialNetworkList } from \"../shared/SocialNetworkList\";\r\nimport ScrollSlider, { SlideSectionProps } from \"../shared/scrollSlider/ScrollSlider\";\r\nimport { useScrollNavBar } from \"../../hooks/useScrollNavBar\";\r\n\r\nconst companySlogan = \"DISEÑO Y CONSTRUCCION DE REDES CONTRA INCENDIOS\";\r\n\r\nexport const LandingPage = (props: {}) => {\r\n  return (\r\n      <div className=\"grid grid-cols-4\">\r\n        <StaticImage\r\n          className=\"col-span-4 col-start-1 row-start-1\"\r\n          layout=\"fullWidth\"\r\n          src=\"../../images/landing-page-background.jpg\"\r\n          alt=\"city-from-space\"\r\n        />\r\n        <div className=\"bg-black relative col-span-4 col-start-1 row-start-1 opacity-25\"></div>\r\n        <div className=\"text-background relative grid col-span-4 col-start-1 row-start-1\">\r\n          <div className=\"h-full grid\">\r\n            <div className=\"flex justify-center items-center w-full p-2\">\r\n              <ContactInformation />\r\n            </div>\r\n\r\n            <div className=\"h-full grid grid-cols-10\">\r\n              <div className=\"flex flex-col justify-center w-full col-start-2 col-span-9\">\r\n                <p className=\"w-2/3 text-6xl pr-24\">{companySlogan}</p>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end items-start col-start-2 col-span-9 p-3\">\r\n                <div className=\"w-2/3\"></div>\r\n                <div className=\" flex w-1/3 justify-center items-center\">\r\n                  <SocialNetworkList />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import { StaticImage } from \"gatsby-plugin-image\";\r\nimport React, { forwardRef, useRef } from \"react\";\r\nimport { Service } from \"../../model/Services\";\r\nimport ScrollSlider, {\r\n  SlideSectionProps,\r\n} from \"../shared/scrollSlider/ScrollSlider\";\r\nimport { useScrollNavBar } from \"../../hooks/useScrollNavBar\";\r\n\r\nconst title = \"Servicios\";\r\nconst imagePath = \"../../images/services-page.jpg\";\r\nconst services: Service[] = [\r\n  {\r\n    title: \"Deteccion de incendios\",\r\n    subtitle: \"Lorem ipsum dolor sit amet\",\r\n    icon: \"\",\r\n    description: `Lorem ipsum dolor sit amet. Aut voluptas culpa et eligendi voluptatem a cumque internos in minus reprehenderit 33 temporibus accusamus qui doloremque rerum et voluptates cumque.`,\r\n  },\r\n  {\r\n    title: \"Red contra incendios\",\r\n    subtitle: \"Lorem ipsum dolor sit amet\",\r\n    icon: \"\",\r\n    description: `Et assumenda velit est voluptatum galisum ut nisi eius et omnis amet et maiores blanditiis est dolores voluptatum id labore obcaecati. A vero optio hic impedit officia est dignissimos fugit sit facilis ducimus?`,\r\n  },\r\n  {\r\n    title: \"Sistema electricos\",\r\n    subtitle: \"Lorem ipsum dolor sit amet\",\r\n    icon: \"\",\r\n    description: `Id quia voluptatem est maiores molestiae vel quisquam sint cum quibusdam enim qui neque amet hic sint animi ut neque commodi. Et aliquam consequuntur sed voluptas doloribus ut dolores dolorem et autem omnis aut omnis delectus. Rem tempora quos est similique commodi qui fugit tempora est eligendi fugiat nam perferendis sunt`,\r\n  },\r\n];\r\n\r\nexport const ServiceItem = ({ service }: { service: Service }) => {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"bg-surface p-2\">\r\n        <h3 className=\"pb-3 text-lg font-bold\">{service.title}</h3>\r\n        <p className=\"pb-1\">{service.subtitle}</p>\r\n        <p>{service.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ServicesPage = (props: {}) => {\r\n  return (\r\n    <div id=\"#services\" className=\"p-3 bg-background\">\r\n      <h2>{title}</h2>\r\n      <div className=\"flex\">\r\n        <div className=\"w-2/5 py-3\">\r\n          <StaticImage className=\"h-full\" src={imagePath} alt=\"\" />\r\n        </div>\r\n        <div className=\"w-3/5\">\r\n          <div className=\"flex flex-col gap-4 p-3\">\r\n            {services.map((service) => (\r\n              <ServiceItem service={service} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport ScrollSlider, { Slide, SlideSectionProps } from \"../shared/scrollSlider/ScrollSlider\";\r\nimport { useScrollNavBar } from \"../../hooks/useScrollNavBar\";\r\n\r\nconst title = \"Perfil Empresarial\";\r\nconst imagePath = \"../../images/bussiness-profile-page.jpg\";\r\nconst description = `Est modi sapiente est error rerum aut similique facilis. In numquam eligendi rem tempore galisum a consectetur rerum.\r\n\r\nEst pariatur fuga vel internos beatae ut corporis eveniet sit dolor reprehenderit non sunt dicta. In eius sint quo beatae eveniet id doloremque exercitationem.\r\n\r\nSed maxime provident aut tenetur doloremque qui voluptas omnis eos error esse et eaque laborum. Sit voluptatem quae id dicta assumenda aut tempore fugit ut laboriosam possimus ut aperiam minus id blanditiis dolor. Qui excepturi minima id eaque dolor qui autem nihil sit culpa quis vel quidem consequuntur sed minima numquam.\r\n\r\nSed dolorum quidem et dolore asperiores sed consectetur mollitia et quaerat recusandae. Eum quam architecto 33 rerum voluptas et facilis omnis sit ipsa amet quo dolores unde. Cum voluptas odio et earum necessitatibus eos consequuntur accusantium.`;\r\n\r\nexport const BusinessProfilePage = (props: {}) => {\r\n\r\n  return (\r\n      <div className=\"grid grid-cols-4\">\r\n        <StaticImage\r\n          className=\"col-span-4 col-start-1 row-start-1\"\r\n          src={imagePath}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"relative grid col-span-4 col-start-1 row-start-1\">\r\n          <h1 className=\"pt-10 pl-10 text-background text-4xl\">{title}</h1>\r\n          <div className=\"p-10\">\r\n            <p className=\"bg-surface w-1/2 p-4 box-border\">{description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import React, { forwardRef, useRef } from \"react\";\r\nimport { GatsbyImage, StaticImage, getImage } from \"gatsby-plugin-image\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport ScrollSlider, {\r\n  SlideSectionProps,\r\n} from \"../shared/scrollSlider/ScrollSlider\";\r\nimport { useScrollNavBar } from \"../../hooks/useScrollNavBar\";\r\n\r\nconst title = \"Clientes\";\r\n\r\nexport const ClientsPage = (props: {} ) => {\r\n\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query ClientLogosQuery {\r\n      allFile(filter: { sourceInstanceName: { eq: \"clientLogos\" } }) {\r\n        edges {\r\n          node {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <div className=\"py-4\">\r\n      <div className=\"flex justify-center p-6\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"bg-surface p-4 grid grid-cols-4 gap-3\">\r\n        {data.allFile.edges.map((item, index) => {\r\n          return (\r\n            <div className=\"bg-secondary w-80 p-3\" key={index}>\r\n              <GatsbyImage\r\n                image={item.node.childImageSharp.gatsbyImageData}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root)\n    return \"0\";\n  if (RootIds.has(root))\n    return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip)\n      return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef();\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref)\n        return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current)\n            callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef();\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map","import React, { createContext, useContext } from \"react\";\r\n\r\nexport interface ScrollNavBarType {\r\n  context: {\r\n    sections: {\r\n      [key: string]: {\r\n        label: string;\r\n        ref: any | null;\r\n      };\r\n    };\r\n    visibleSection: string;\r\n  };\r\n  setScrollNavBar: (k: any) => void;\r\n}\r\n\r\nexport const initialScrollNavBar: ScrollNavBarType = {\r\n  context: {\r\n    sections: {},\r\n    visibleSection: \"\",\r\n  },\r\n  setScrollNavBar: (o) => {},\r\n};\r\n\r\nexport const ScrollNavBarContext = createContext(initialScrollNavBar);\r\n\r\nexport const ScrollNavbar = ({}) => {\r\n  const { context } = useContext(ScrollNavBarContext);\r\n  const { sections, visibleSection } = context;\r\n\r\n  const handleScrollIntoSection = (ref: any) => {\r\n    console.log(ref);\r\n    ref.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sticky top-0 z-50\">\r\n      <div className=\"bg-surface flex flex-wrap flex-row justify-between items-center px-5\">\r\n        {Object.keys(sections).map((key) => (\r\n          <button\r\n            className={`${visibleSection == key ? \"font-bold\" : \"font-light\"}`}\r\n            onClick={() => handleScrollIntoSection(sections[key].ref)}\r\n          >\r\n            {sections[key].label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Slide } from \"./Slide\";\r\nimport { ScrollNavBarContext, ScrollNavBarType, ScrollNavbar } from \"./ScrollNavBar\";\r\n\r\nexport interface SlideSectionProps {\r\n  section: string;\r\n}\r\n\r\nconst ScrollSlider = ({contextValue, children }: {contextValue: ScrollNavBarType, children: ReactNode}) => {\r\n\r\n  return (\r\n    <ScrollNavBarContext.Provider value={contextValue}>\r\n      <div className=\"\">\r\n        {children}\r\n      </div>\r\n    </ScrollNavBarContext.Provider>\r\n  );\r\n};\r\n\r\nScrollSlider.Slide = Slide;\r\nScrollSlider.ScrollNavbar = ScrollNavbar;\r\n\r\nexport default ScrollSlider;\r\n","import React, {\r\n  Context,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { SlideSectionProps } from \"./ScrollSlider\";\r\nimport { ScrollNavBarContext } from \"./ScrollNavBar\";\r\n\r\nexport const Slide = ({\r\n  section,\r\n  children,\r\n}: {\r\n  children: ReactNode;\r\n} & SlideSectionProps) => {\r\n  const { context, setScrollNavBar } = useContext(ScrollNavBarContext);\r\n  const auxRef = useRef(null);\r\n\r\n  const { ref } = useInView({\r\n    threshold: 0.5,\r\n    // triggerOnce: true,\r\n    onChange: (inView: any, entry: { target: { id: string } }) => {\r\n      if (inView) {\r\n        const copySection = { ...context };\r\n        copySection.visibleSection = section;\r\n        setScrollNavBar(copySection);\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const copySection = { ...context };\r\n    copySection.sections[section].ref = auxRef;\r\n    setScrollNavBar(copySection);\r\n  }, [auxRef]);\r\n\r\n  return (\r\n    <div ref={auxRef}>\r\n      <section id={section} ref={ref} className=\"\">\r\n        {children}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { LandingPage } from \"../components/landingPage/LandingPage\";\nimport { ServicesPage } from \"../components/landingPage/ServicesPage\";\nimport { BusinessProfilePage } from \"../components/landingPage/BusinessProfilePage\";\nimport { ClientsPage } from \"../components/landingPage/ClientsPage\";\nimport { useRef, useState } from \"react\";\nimport { initialNavBarContext } from \"../components/shared/navigationBar/NavigationContext\";\nimport ScrollSlider from \"../components/shared/scrollSlider/ScrollSlider\";\n\nconst initialScrollNavBar = {\n  sections: {\n    services: {\n      label: \"Servicios\",\n      ref: null,\n    },\n    businessProfile: {\n      label: \"Perfil Empresarial\",\n      ref: null,\n    },\n    clients: {\n      label: \"Clientes\",\n      ref: null,\n    },\n  },\n  visibleSection: \"services\",\n};\n\nconst IndexPage = () => {\n\n  const [context, setScrollNavBar] = useState(initialScrollNavBar);\n  const scrollSliderContext = { context, setScrollNavBar };\n  const scrollMenus = Object.keys(initialScrollNavBar.sections);\n\n  return (\n    <div>\n      <Layout\n      >\n        <ScrollSlider contextValue={scrollSliderContext}>\n          <LandingPage />\n          <ScrollSlider.ScrollNavbar />\n\n          <ScrollSlider.Slide\n            section={scrollMenus[0]}\n          >\n            <ServicesPage />\n          </ScrollSlider.Slide>\n\n          <ScrollSlider.Slide\n            section={scrollMenus[1]}\n          >\n            <BusinessProfilePage />\n          </ScrollSlider.Slide>\n\n          <ScrollSlider.Slide\n            section={scrollMenus[2]}\n          >\n            <ClientsPage />\n          </ScrollSlider.Slide>\n        </ScrollSlider>\n      </Layout>\n    </div>\n  );\n};\n\nexport default IndexPage;\n"],"names":["GenIcon","module","exports","props","DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","data","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","hasNativeLazyLoadSupport","HTMLImageElement","srcSet","layout","wrapperStyle","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","initialNavBarContext","home","label","path","handler","services","news","NavBarContext","createContext","navOptions","setNavOptions","CompanyLogo","useContext","onClick","navigate","disabled","IoIosSearch","NavigationLinks","keys","Link","to","activeStyle","NavBar","SearchBar","useState","Provider","value","ContactInformation","contactInformation","icon","IoMailOutline","FaUserTie","contact","SocialNetworkList","socialNetworks","FaWhatsapp","link","FaInstagram","FaFacebookF","net","href","LandingPage","subtitle","description","ServiceItem","service","ServicesPage","id","BusinessProfilePage","ClientsPage","useStaticQuery","allFile","edges","item","index","childImageSharp","gatsbyImageData","__defProp","defineProperty","__publicField","obj","enumerable","configurable","writable","__defNormalProp","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","sort","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","createObserver","callbacks","push","splice","delete","unobserve","disconnect","initialScrollNavBar","context","sections","visibleSection","setScrollNavBar","o","ScrollNavBarContext","ScrollSlider","contextValue","Slide","section","auxRef","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","state","setState","entryTarget","previousEntryTarget","useInView","copySection","ScrollNavbar","handleScrollIntoSection","log","_ref$current","scrollIntoView","behavior","businessProfile","clients","scrollSliderContext","scrollMenus","Layout"],"sourceRoot":""}