{"version":3,"file":"component---src-components-gipe-services-company-service-detail-tsx-content-file-path-src-data-services-sistema-redes-electricas-sistema-redes-electricas-mdx-23baa0b2a5a2fd673b14.js","mappings":"0LAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,qBAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kDCJA,MAAMU,EAAuBC,IAC3B,IAAI,QAACC,GAAWD,EAChB,MAAME,GAAeC,EAAAA,EAAAA,GAASF,EAAQG,WACtC,OAAOR,EAAAA,cAAoB,MAAO,CAChCS,UAAW,6DACVT,EAAAA,cAAoB,MAAO,CAC5BS,UAAW,kDACVT,EAAAA,cAAoB,KAAM,CAC3BS,UAAW,UACVJ,EAAQK,OAAQV,EAAAA,cAAoBW,EAAAA,GAAQ,KAAMX,EAAAA,cAAoBY,EAAAA,EAAa,CACpFH,UAAW,sBACXI,MAAOP,EACPQ,IAAK,MACFd,EAAAA,cAAoB,IAAK,KAAMK,EAAQU,cAAef,EAAAA,cAAoBgB,EAAAA,GAAS,KAAMhB,EAAAA,cAAoB,MAAO,CACvHS,UAAW,8CACVT,EAAAA,cAAoBY,EAAAA,EAAa,CAClCH,UAAW,sBACXI,MAAOP,EACPQ,IAAK,OACF,EAEDG,EAA2BC,IAC/B,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,MAAMb,GAAUgB,EAAAA,EAAAA,GAAqBF,EAAKG,KAC1C,OAAOtB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBuB,EAAAA,EAAQ,KAAMvB,EAAAA,cAAoB,MAAO,CAC5GS,UAAW,4BACVT,EAAAA,cAAoB,MAAO,CAC5BS,UAAW,UACVT,EAAAA,cAAoBwB,EAAAA,EAAqB,CAC1CC,cAAepB,KACZA,EAAQqB,SAASC,KAAIC,GAAK5B,EAAAA,cAAoBG,EAAsB,CACvEE,QAASuB,MACN5B,EAAAA,cAAoB6B,EAAAA,GAAa,KAAMT,KAAY,EAG3C,SAASU,EAAiBrC,GACvC,OAAOO,EAAAA,cAAoBiB,EAA0BxB,EAAOO,EAAAA,cAAoB+B,EAAqBtC,GACvG,C,+ECzCO,MAAM+B,EAAsBpB,IAI5B,IAJ6B,cAClCqB,GAGD,EACC,MAAMO,GAAqBzB,EAAAA,EAAAA,GAASkB,EAAcjB,WAElD,OACER,EAAAA,cAAAA,MAAAA,CAAKS,UAAU,wCACbT,EAAAA,cAACY,EAAAA,EAAW,CAACH,UAAU,QAAQI,MAAOmB,EAAoBlB,IAAI,KAC9Dd,EAAAA,cAAAA,MAAAA,CAAKS,UAAU,0CACbT,EAAAA,cAAAA,KAAAA,CAAIS,UAAU,YAAYgB,EAAcf,QAEtC,C,8FCgBH,MAAMuB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBnC,GAC/B,MAAMoC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAflC,EACFA,EAAWoC,GAGb,IAAIA,KAAsBpC,IAChC,CAACoC,EAAmBpC,GACzB,CAGA,MAAMqC,EAAc,CAAC,EAQd,SAASP,GAAY,WAAC9B,EAAU,SAAEqB,EAAQ,qBAAEiB,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAftC,EACHA,EAAW,CAAC,GACZA,GAAcqC,EAEJF,EAAiBnC,GAG5B,gBACLkC,EAAWM,SACX,CAACC,MAAOF,GACRlB,EAEJ,C","sources":["webpack://my-gatsby-site/./src/data/services/sistema-redes-electricas/sistema-redes-electricas.mdx","webpack://my-gatsby-site/./src/components/gipeServices/CompanyServiceDetail.tsx","webpack://my-gatsby-site/./src/components/gipeServices/ServiceBranchHeader.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"This is a services\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Development/road to master/gipe-ui/src/data/services/sistema-redes-electricas/sistema-redes-electricas.mdx\";\nimport React from \"react\";\nimport {nodeToCompanyService} from \"../../model/Services\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {ServiceBranchHeader} from \"./ServiceBranchHeader\";\nimport Layout from \"../shared/layout/Layout\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Desktop, Mobile} from \"../shared/layout/Responsive\";\nconst CompanyServiceDetail = _ref => {\n  let {service} = _ref;\n  const serviceImage = getImage(service.imagePath);\n  return React.createElement(\"div\", {\n    className: \"flex flex-wrap odd:flex-row-reverse w-full justify-evenly\"\n  }, React.createElement(\"div\", {\n    className: \"prose flex flex-col justify-start items-center\"\n  }, React.createElement(\"h2\", {\n    className: \"w-full\"\n  }, service.title), React.createElement(Mobile, null, React.createElement(GatsbyImage, {\n    className: \"aspect-video w-full\",\n    image: serviceImage,\n    alt: \"\"\n  })), React.createElement(\"p\", null, service.description)), React.createElement(Desktop, null, React.createElement(\"div\", {\n    className: \"md:w-1/3 flex justify-between items-center\"\n  }, React.createElement(GatsbyImage, {\n    className: \"aspect-video w-full\",\n    image: serviceImage,\n    alt: \"\"\n  }))));\n};\nconst CompanyServiceDetailPage = _ref2 => {\n  let {data, children} = _ref2;\n  const service = nodeToCompanyService(data.mdx);\n  return React.createElement(React.Fragment, null, React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"flex flex-col gap-10 p-5\"\n  }, React.createElement(\"div\", {\n    className: \"w-full\"\n  }, React.createElement(ServiceBranchHeader, {\n    serviceBranch: service\n  })), service.services.map(s => React.createElement(CompanyServiceDetail, {\n    service: s\n  })), React.createElement(MDXProvider, null, children))));\n};\nCompanyServiceDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(CompanyServiceDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"1383806545\";\n","import React from \"react\";\r\nimport { ServiceBranchProps } from \"../../model/Services\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nexport const ServiceBranchHeader = ({\r\n  serviceBranch,\r\n}: {\r\n  serviceBranch: ServiceBranchProps;\r\n}) => {\r\n  const serviceBranchImage = getImage(serviceBranch.imagePath);\r\n\r\n  return (\r\n    <div className=\"flex justify-evenly items-star gap-3\">\r\n      <GatsbyImage className=\"w-1/3\" image={serviceBranchImage} alt=\"\" />\r\n      <div className=\"w-2/3 flex justify-center items-center\">\r\n        <h1 className=\"text-5xl\">{serviceBranch.title}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","CompanyServiceDetail","_ref","service","serviceImage","getImage","imagePath","className","title","Mobile","GatsbyImage","image","alt","description","Desktop","CompanyServiceDetailPage","_ref2","data","children","nodeToCompanyService","mdx","Layout","ServiceBranchHeader","serviceBranch","services","map","s","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","serviceBranchImage","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}