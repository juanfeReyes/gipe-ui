{"version":3,"file":"component---src-pages-news-index-tsx-7e823e3fb839ca6f650e.js","mappings":"wGACA,IAAIA,EAAU,WACdC,EAAOC,QAAQ,EAAgB,SAAwBC,GACrD,OAAOH,EAAQ,CAAC,IAAM,MAAM,KAAO,CAAC,QAAU,aAAa,MAAQ,CAAC,CAAC,IAAM,IAAI,KAAO,CAAC,EAAE,MAAQ,CAAC,CAAC,IAAM,OAAO,KAAO,CAAC,KAAO,OAAO,EAAI,kBAAkB,CAAC,IAAM,OAAO,KAAO,CAAC,EAAI,2IAA/KA,CAA2TG,EACpU,C,4FCDO,MAAMC,EAAcC,IAA2C,IAA1C,YAACC,GAAmC,EAE9D,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2BACHD,EAAAA,cAACE,EAAW,CAACH,YAAaA,IACzBA,EACG,EAIdG,EAAcC,IAA2C,IAA1C,YAACJ,GAAmC,EAEvD,GACO,YADCA,EAEJ,OAAOC,EAAAA,cAACI,EAAAA,EAAa,KAAG,C,2FCLvB,MAAMC,EAAiBC,IACrB,IACFA,EAAEC,YACLC,KAAMF,EAAEE,KACRC,WAAYH,EAAEI,OAAOD,WAAWE,OAIvBC,EAAiBC,GACrBA,EAAKC,KAAKC,MAAMC,KAAKV,GAAMD,EAAcC,I,+JCZlD,MAAMW,EAAkBnB,IAAuC,IAAtC,QAAEoB,GAA+B,EACxD,MAAMC,GAAQC,EAAAA,EAAAA,GAASF,EAAQG,WAE/B,OACErB,EAAAA,cAACsB,EAAAA,GAAI,CAACC,GAAK,GAAEL,EAAQM,SACnBxB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAACyB,EAAAA,GAAO,KACNzB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,SACbD,EAAAA,cAAC0B,EAAAA,EAAW,CAACP,MAAOA,EAAOQ,IAAI,OAGnC3B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,+CACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,uBAAuBiB,EAAQM,OAC7CxB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,cAAciB,EAAQT,aAErCT,EAAAA,cAAC4B,EAAAA,GAAM,KACL5B,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC0B,EAAAA,EAAW,CAACP,MAAOA,EAAOQ,IAAI,OAGnC3B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,IAAAA,KAAIkB,EAAQW,SACZ7B,EAAAA,cAACH,EAAAA,EAAW,CAACE,YAAamB,EAAQY,cAInC,EAyBX,MArBiB,KACf,MAAMC,ECtCkB,MACxB,MAAMlB,GAAOmB,EAAAA,EAAAA,IAAe,aA4B5B,OAFapB,EAAAA,EAAAA,GAAcC,EAEhB,EDSMoB,GAEjB,OACEjC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACkC,EAAAA,EAAM,KACLlC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,iBAAgB,aAEhCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,4BACZ8B,EAASf,KAAKV,GACbN,EAAAA,cAACiB,EAAe,CAACC,QAASZ,SAKjC,C","sources":["webpack://my-gatsby-site/./node_modules/@react-icons/all-files/ri/RiArticleFill.js","webpack://my-gatsby-site/./src/components/news/ArticleIcon.tsx","webpack://my-gatsby-site/./src/model/News.ts","webpack://my-gatsby-site/./src/pages/news/index.tsx","webpack://my-gatsby-site/./src/query/news/getAllNews.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.RiArticleFill = function RiArticleFill (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"fill\":\"none\",\"d\":\"M0 0h24v24H0z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1zM7 6v4h4V6H7zm0 6v2h10v-2H7zm0 4v2h10v-2H7zm6-9v2h4V7h-4z\"}}]}]})(props);\n};\n","import {RiArticleFill} from '@react-icons/all-files/ri/RiArticleFill'\r\nimport React from 'react'\r\n\r\nexport const ArticleType = ({articleType}: {articleType: string}) => {\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-1\">\r\n                <ArticleIcon articleType={articleType} />\r\n                {articleType}\r\n              </div>\r\n  )\r\n}\r\n\r\nconst ArticleIcon = ({articleType}: {articleType: string}) => {\r\n\r\n  switch (articleType) {\r\n    case 'Article':\r\n      return <RiArticleFill />\r\n  }\r\n}\r\n\r\n","import { ImageDataLike } from \"gatsby-plugin-image\";\r\n\r\nexport interface Article {\r\n  title: string;\r\n  imagePath: ImageDataLike;\r\n  publishDate: string;\r\n  summary: string;\r\n  category: string;\r\n  timeToRead: string;\r\n  body: string;\r\n}\r\n\r\nexport const nodeToArticle = (n) => {\r\n  return {\r\n    ...n.frontmatter,\r\n    body: n.body,\r\n    timeToRead: n.fields.timeToRead.text,\r\n  };\r\n};\r\n\r\nexport const mapToArticles = (data: any) => {\r\n  return data.news.nodes.map((n) => nodeToArticle(n));\r\n};\r\n","import React from \"react\";\r\nimport Layout from \"../../components/shared/layout/Layout\";\r\nimport { getAllNews } from \"../../query/news/getAllNews\";\r\nimport { Article } from \"../../model/News\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport { ArticleType } from \"../../components/news/ArticleIcon\";\r\nimport { Link } from \"gatsby\";\r\nimport { Desktop, Mobile } from \"../../components/shared/layout/Responsive\";\r\n\r\nconst ArticleItemList = ({ article }: { article: Article }) => {\r\n  const image = getImage(article.imagePath);\r\n\r\n  return (\r\n    <Link to={`${article.title}`}>\r\n      <div className=\"flex gap-5\">\r\n        <Desktop>\r\n          <div className=\"w-1/5\">\r\n            <GatsbyImage image={image} alt=\"\" />\r\n          </div>\r\n        </Desktop>\r\n        <div className=\"md:w-4/5 flex flex-col justify-around gap-8\">\r\n          <div className=\"flex flex-col\">\r\n            <h2 className=\"text-xl font-medium\">{article.title}</h2>\r\n            <p className=\"font-light\">{article.timeToRead}</p>\r\n          </div>\r\n          <Mobile>\r\n            <div>\r\n              <GatsbyImage image={image} alt=\"\" />\r\n            </div>\r\n          </Mobile>\r\n          <div className=\"flex flex-col\">\r\n            <p>{article.summary}</p>\r\n            <ArticleType articleType={article.category} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst NewsPage = () => {\r\n  const newsList = getAllNews();\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"p-5 divide-y-2\">\r\n          <div className=\"flex flex-col gap-3\">\r\n            <h1 className=\"text-5xl py-5\">Noticias</h1>\r\n          </div>\r\n          <div className=\"flex flex-col gap-5 py-5\">\r\n            {newsList.map((n) => (\r\n              <ArticleItemList article={n} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport { mapToArticles } from \"../../model/News\";\r\n\r\nexport const getAllNews = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query allNews {\r\n      news: allMdx(filter: { fields: { source: { eq: \"news\" } } }) {\r\n        nodes {\r\n          fields {\r\n            source\r\n            timeToRead {\r\n              text\r\n            }\r\n          }\r\n          frontmatter {\r\n            title\r\n            publishDate\r\n            category\r\n            summary\r\n            imagePath {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const news = mapToArticles(data);\r\n\r\n  return news;\r\n};"],"names":["GenIcon","module","exports","props","ArticleType","_ref","articleType","React","className","ArticleIcon","_ref2","RiArticleFill","nodeToArticle","n","frontmatter","body","timeToRead","fields","text","mapToArticles","data","news","nodes","map","ArticleItemList","article","image","getImage","imagePath","Link","to","title","Desktop","GatsbyImage","alt","Mobile","summary","category","newsList","useStaticQuery","getAllNews","Layout"],"sourceRoot":""}